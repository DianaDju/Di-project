def welcome():
    ''' Функция красивого приветсвия '''
    print('//////////////////////////')
    print(' Добро пожаловать в игру: ')
    print('    КРЕСТИКИ  НОЛИКИ      ')
    print('//////////////////////////')
    print('Правила игры:             ')
    print('          x,у - координаты')
    print('x - номер строки          ')
    print('  у - номер столбца       ')
    print('//////////////////////////')
    print('Делайте ходы с умом и...  ')
    print(' Пусть удача будет на     ')
    print('            вашей стороне!')
#welcome()

field = [[" - "]*3 for i in range(3)] # Создаем пустой двумерный массив
#print(field)

def transform():
    ''' Функция преобразует поле в красивый вид '''
    print('  |  0  |  1  |  2  |')
    print('  ------------------ ')
    for i in range(len(field)):
        print(f'{i} | {field[i][0]} | {field[i][1]} | {field[i][2]} |')
        print('  ------------------ ')
#transform()

def require():
    '''Функция считывает с консоли координаты от игрока и проверяет на соответсвие условиям.

    Критерии оценивание: Пользователь вводит 2 координаты,
    координаты в числовом формате, координаты внутри диапазона,
    клетка не занята. При правильном введении возвращает координаты.'''

    while True:
        position = input('     Введите координаты (x,y): ').split()

        if len(position) != 2:
            print('Введите 2 координаты!')
            continue

        x, y = position

        if not(x.isdigit() and (y.isdigit())):
            print('Введите числа!')
            continue

        x, y = map(int,position)

        if 0 > x or x > 2 or 0 > y or y > 2:
            print('Координаты вне диапазона!')
            continue

        if field[x][y] != " - ":
            print('Клетка занята! Попробуйте снова.')
            continue
        break
    return x, y
#require()

def win():
    '''Функция для обработки всех возможных вариантов победы'''
    win_cords = (((0,0),(0,1),(0,2)),((1,0),(1,1),(1,2)),((2,0),(2,1),(2,2)),((0,2),(1,1),(2,0)),
                 ((0,0),(1,1),(2,2)),((0,0),(1,0),(2,0)),((0,1),(1,1),(2,1)),((0,2),(1,2),(2,2)))
    #переменая со всеми возможными вариантами победы,пришлось долго печатать, но я не придумала как его сделать по другому
    for cord in win_cords:
        symbols = []
        for c in cord:
            symbols.append(field[c[0]][c[1]])
        if symbols == [' X ',' X ',' X ']:
            print('ПОЗДРАВЛЯЕМ !!! Выиграл X !!!')
            return True
        if symbols == [' O ',' O ',' O ']:
            print('ПОЗДРАВЛЯЕМ !!! Выиграл O !!!')
            return True
    return False



def play_game():
    '''Конечная функция игры.

    Функция содержит все предыдущии функции, игра принимает свой конечный красивый вид.
    Так же функция помогает определить очередность хода.'''

    welcome()
    print()

    num = 0
    while True:

        num += 1

        transform()

        if num % 2 == 1:
            print('Ходит крестик:')
        else:
            print('Ходит нолик:')

        x, y = require()

        if num % 2 == 1:
            field[x][y] = ' X '
        else:
            field[x][y] = ' 0 '

        if win():
            break

        if num == 9:
            print('Ничья!')
            break
play_game()








